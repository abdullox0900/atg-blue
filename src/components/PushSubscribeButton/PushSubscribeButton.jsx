import { useEffect, useState } from 'react'
import { useAuth } from '../../context/AuthContext'
import { useNotifications } from '../../hooks/useNotifications'

export default function PushSubscribeButton() {
	const { isAuthenticated } = useAuth()
	const { permissionStatus, requestPermission } =
		useNotifications(isAuthenticated)
	const [loading, setLoading] = useState(false)
	const [error, setError] = useState(null)
	const [showInstructions, setShowInstructions] = useState(false)
	const [isIOS, setIsIOS] = useState(false)

	// Safari –±—Ä–∞—É–∑–µ—Ä–∏–Ω–∏ –∞–Ω–∏“õ–ª–∞—à
	useEffect(() => {
		const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent)
		setIsIOS(isSafari)
	}, [])

	const handleSubscribe = async () => {
		try {
			setLoading(true)
			setError(null)

			const result = await requestPermission()
			if (!result.success) {
				setShowInstructions(true)
				setError(result.error)
			}
		} catch (error) {
			console.error('Subscribe error:', error)
			setError(error.message)
		} finally {
			setLoading(false)
		}
	}

	if (!window.OneSignal?.initialized) return null
	if (permissionStatus === 'granted') return null

	return (
		<>
			<div className='fixed bottom-20 right-4 z-40'>
				<button
					onClick={handleSubscribe}
					disabled={loading}
					className={`
						bg-blue-500 text-white px-4 py-2 rounded-lg shadow-lg
						${loading ? 'opacity-50 cursor-not-allowed' : 'hover:bg-blue-600'}
					`}
				>
					{loading ? '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...' : '–í–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'}
				</button>
				{error && !showInstructions && (
					<p className='text-red-500 text-sm mt-1 bg-white p-2 rounded shadow-lg'>
						–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
					</p>
				)}
			</div>

			{showInstructions && (
				<div className='fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50'>
					<div className='bg-white rounded-lg p-6 max-w-md w-full'>
						<h3 className='text-lg font-bold mb-4'>–ö–∞–∫ –≤–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
						<ol className='list-decimal pl-5 space-y-2 mb-4'>
							{isIOS ? (
								<>
									<li>–û—Ç–∫—Ä–æ–π—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Safari</li>
									<li>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"</li>
									<li>–ù–∞–π–¥–∏—Ç–µ –Ω–∞—à —Å–∞–π—Ç</li>
									<li>–í–∫–ª—é—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</li>
								</>
							) : (
								<>
									<li>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∑–Ω–∞—á–æ–∫ üîí —Å–ª–µ–≤–∞ –æ—Ç –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏</li>
									<li>–ù–∞–π–¥–∏—Ç–µ —Ä–∞–∑–¥–µ–ª "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"</li>
									<li>–ò–∑–º–µ–Ω–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ "–†–∞–∑—Ä–µ—à–∏—Ç—å"</li>
									<li>–û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É</li>
								</>
							)}
						</ol>
						<div className='flex justify-end space-x-2'>
							<button
								onClick={() => setShowInstructions(false)}
								className='px-4 py-2 text-gray-600 hover:text-gray-800'
							>
								–ó–∞–∫—Ä—ã—Ç—å
							</button>
							{!isIOS && (
								<button
									onClick={() => {
										setShowInstructions(false)
										handleSubscribe()
									}}
									className='px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600'
								>
									–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
								</button>
							)}
						</div>
					</div>
				</div>
			)}
		</>
	)
}
